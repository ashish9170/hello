rails generate model Article title:string content:text
rails generate model Comment article:references content:text
rails db:migrate




class Article < ApplicationRecord
  has_many :comments, dependent: :destroy
  accepts_nested_attributes_for :comments, allow_destroy: true
end



class Comment < ApplicationRecord
  belongs_to :article
end




class ArticlesController < ApplicationController
  before_action :set_article, only: [:show, :edit, :update, :destroy]

  def index
    @articles = Article.all
  end

  def show
    @comment = @article.comments.build
  end

  def new
    @article = Article.new
  end

  def create
    @article = Article.new(article_params)
    if @article.save
      redirect_to @article, notice: 'Article was successfully created.'
    else
      render :new
    end
  end

  def edit
  end

  def update
    if @article.update(article_params)
      redirect_to @article, notice: 'Article was successfully updated.'
    else
      render :edit
    end
  end

  def destroy
    @article.destroy
    redirect_to articles_url, notice: 'Article was successfully destroyed.'
  end

  private

  def set_article
    @article = Article.find(params[:id])
  end

  def article_params
    params.require(:article).permit(:title, :content, comments_attributes: [:id, :content, :_destroy])
  end
end





class CommentsController < ApplicationController
  def create
    @article = Article.find(params[:article_id])
    @comment = @article.comments.build(comment_params)
    if @comment.save
      redirect_to @article, notice: 'Comment was successfully created.'
    else
      render 'articles/show'
    end
  end

  private

  def comment_params
    params.require(:comment).permit(:content)
  end
end





Rails.application.routes.draw do
  resources :articles do
    resources :comments, only: [:create]
  end
  root "articles#index"
end






article index



<h1>Articles</h1>

<%= link_to 'New Article', new_article_path %>

<ul>
  <% @articles.each do |article| %>
    <li>
      <%= link_to article.title, article %>
      <%= link_to 'Edit', edit_article_path(article) %> |
      <%= link_to 'Destroy', article, method: :delete, data: { confirm: 'Are you sure?' } %>
    </li>
  <% end %>
</ul>




show


<h1><%= @article.title %></h1>
<p><%= @article.content %></p>

<h2>Comments</h2>
<% @article.comments.each do |comment| %>
  <div class="comment">
    <p><%= comment.content %></p>
  </div>
<% end %>

<h2>Add a Comment</h2>
<%= form_with(model: [@article, @comment], local: true) do |form| %>
  <div class="field">
    <%= form.label :content %>
    <%= form.text_area :content %>
  </div>
  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>

<%= link_to 'Back', articles_path %>




new 



<h1>New Article</h1>

<%= form_with(model: @article, local: true) do |form| %>
  <div class="field">
    <%= form.label :title %>
    <%= form.text_field :title %>
  </div>
  <div class="field">
    <%= form.label :content %>
    <%= form.text_area :content %>
  </div>
  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>

<%= link_to 'Back', articles_path %>






edit



<h1>Edit Article</h1>

<%= form_with(model: @article, local: true) do |form| %>
  <div class="field">
    <%= form.label :title %>
    <%= form.text_field :title %>
  </div>
  <div class="field">
    <%= form.label :content %>
    <%= form.text_area :content %>
  </div>
  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>

<%= link_to 'Back', articles_path %>
