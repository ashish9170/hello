# app/controllers/authors_controller.rb
class AuthorsController < ApplicationController
  before_action :set_author, only: %i[show edit update destroy]

  def index
    @authors = Author.all
    @author = Author.new
  end

  def show; end

  def new
    @author = Author.new
  end

  def edit; end

  def create
    @new_author = Author.new(author_params)
    if @new_author.save
      respond_to do |format|
        format.html { redirect_to authors_path, notice: 'Author was successfully created.' }
        format.js   # Add this line
      end
    else
      respond_to do |format|
        format.html { render :new, status: :unprocessable_entity }
        format.js   # Add this line
      end
    end
  end

  def update
    if @author.update(author_params)
      respond_to do |format|
        format.html { redirect_to authors_path, notice: 'Author was successfully updated.' }
        format.js   # Add this line
      end
    else
      respond_to do |format|
        format.html { render :edit, status: :unprocessable_entity }
        format.js   # Add this line
      end
    end
  end

  def destroy
    @author.destroy
    respond_to do |format|
      format.html { redirect_to authors_path, notice: 'Author was successfully destroyed.' }
      format.js   # Add this line
    end
  end

  private

  def set_author
    @author = Author.find(params[:id])
  end

  def author_params
    params.require(:author).permit(:first_name, :last_name)
  end
end





// app/views/authors/create.js.erb
$('#authors_list').append('<%= j render @new_author %>');
$('#new_author')[0].reset();





// app/views/authors/update.js.erb
$('#author_<%= @author.id %>').replaceWith('<%= j render @author %>');





// app/views/authors/destroy.js.erb
$('#author_<%= @author.id %>').remove();





<!-- app/views/authors/index.html.erb -->
<h1>Authors</h1>

<div id="authors_list">
  <%= render @authors %>
</div>

<h2>New Author</h2>
<%= render 'form', author: @author %>





<!-- app/views/authors/_author.html.erb -->
<div id="author_<%= author.id %>">
  <p><strong><%= author.first_name %> <%= author.last_name %></strong></p>
  <%= link_to 'Edit', edit_author_path(author), remote: true %> |
  <%= link_to 'Destroy', author, method: :delete, data: { confirm: 'Are you sure?' }, remote: true %>
</div>





<!-- app/views/authors/_form.html.erb -->
<%= form_with(model: author, local: false, id: 'new_author') do |form| %>
  <% if author.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(author.errors.count, "error") %> prohibited this author from being saved:</h2>

      <ul>
        <% author.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :first_name %>
    <%= form.text_field :first_name %>
  </div>

  <div class="field">
    <%= form.label :last_name %>
    <%= form.text_field :last_name %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>




// app/views/authors/new.js.erb
$('#form_container').html('<%= j render 'form', author: @author %>');




// app/views/authors/edit.js.erb
$('#form_container').html('<%= j render 'form', author: @author %>');




<!-- app/views/authors/index.html.erb -->
<h1>Authors</h1>

<div id="authors_list">
  <%= render @authors %>
</div>

<div id="form_container">
  <%= render 'form', author: @author %>
</div>



rails new ajax_authors_app
cd ajax_authors_app


rails generate model Author first_name:string last_name:string
rails db:migrate


# config/routes.rb
Rails.application.routes.draw do
  resources :authors
  root 'authors#index'
end



// app/assets/javascripts/application.js
//= require jquery
//= require jquery_ujs
//= require_tree .
